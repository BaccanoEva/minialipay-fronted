{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hotpotman/minialipay-frontend/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/hotpotman/minialipay-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/hotpotman/minialipay-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport request from \"request-promise-native\";\nimport { Toast } from \"antd-mobile\";\nimport { showLoadingIndicator } from \"../component/common/LoadingIndicator\";\nimport joinUrl from \"./joinUrl\";\nimport env from \"../env\";\n\nfunction resolveUrl(endPoint) {\n  return joinUrl(env.SERVER_URL, endPoint);\n}\n\nvar DEFAULT_CONFIG = {\n  hideLoading: false,\n  loadingWithMask: true,\n  headers: {}\n};\nexport default\n/*#__PURE__*/\n(function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(endPoint) {\n    var requestData,\n        config,\n        showError,\n        headers,\n        params,\n        hideLoadingIndicator,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            requestData = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            config = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_CONFIG;\n            // 合并config\n            config = _objectSpread({}, DEFAULT_CONFIG, config);\n\n            showError = function showError(message) {\n              if (!message) {\n                return;\n              }\n\n              Toast.offline(message, 1.2); // 用offline纯粹是因为Toast的\"哭脸\"好看，这就是弹一条消息出来的效果\n            };\n\n            headers = _objectSpread({}, config.headers);\n            params = {\n              headers: headers,\n              endPoint: endPoint,\n              requestData: requestData\n            };\n\n            if (!config.hideLoading) {\n              hideLoadingIndicator = showLoadingIndicator(config.loadingWithMask);\n            } //TODO: 这部分逻辑可以自行修改，我这里假设了服务器返回 { success, errorMessage, data }\n\n\n            return _context.abrupt(\"return\", request({\n              method: \"POST\",\n              uri: resolveUrl(params.endPoint),\n              headers: params.headers,\n              json: true,\n              form: {\n                endPoint: params.endPoint,\n                requestData: JSON.stringify([params.requestData])\n              }\n            }).then(function (result) {\n              if (!result.success) {\n                return Promise.reject(result);\n              }\n\n              return result.data; // 没有错误，就返回data\n            }).catch(function (e) {\n              if (e) {\n                showError(e.errorMessage || e.message); // 显示错误信息\n              }\n\n              return Promise.reject(e);\n            }).finally(function () {\n              if (hideLoadingIndicator) {\n                hideLoadingIndicator();\n              }\n            }));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/hotpotman/minialipay-frontend/src/util/request.js"],"names":["request","Toast","showLoadingIndicator","joinUrl","env","resolveUrl","endPoint","SERVER_URL","DEFAULT_CONFIG","hideLoading","loadingWithMask","headers","requestData","config","showError","message","offline","params","hideLoadingIndicator","method","uri","json","form","JSON","stringify","then","result","success","Promise","reject","data","catch","e","errorMessage","finally"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,wBAApB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,oBAAT,QAAqC,sCAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,SAAOH,OAAO,CAACC,GAAG,CAACG,UAAL,EAAiBD,QAAjB,CAAd;AACD;;AAGD,IAAME,cAAc,GAAG;AACrBC,EAAAA,WAAW,EAAE,KADQ;AAErBC,EAAAA,eAAe,EAAE,IAFI;AAGrBC,EAAAA,OAAO,EAAE;AAHY,CAAvB;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAe,iBAAOL,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBM,YAAAA,WAAjB,2DAA+B,EAA/B;AAAmCC,YAAAA,MAAnC,2DAA4CL,cAA5C;AAEb;AACAK,YAAAA,MAAM,qBAAOL,cAAP,EAA0BK,MAA1B,CAAN;;AAEMC,YAAAA,SALO,GAKK,SAAZA,SAAY,CAACC,OAAD,EAAa;AAC7B,kBAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AACDd,cAAAA,KAAK,CAACe,OAAN,CAAcD,OAAd,EAAuB,GAAvB,EAJ6B,CAIA;AAC9B,aAVY;;AAYPJ,YAAAA,OAZO,qBAaRE,MAAM,CAACF,OAbC;AAiBPM,YAAAA,MAjBO,GAiBE;AACbN,cAAAA,OAAO,EAAPA,OADa;AACJL,cAAAA,QAAQ,EAARA,QADI;AACMM,cAAAA,WAAW,EAAXA;AADN,aAjBF;;AAsBb,gBAAI,CAACC,MAAM,CAACJ,WAAZ,EAAyB;AACvBS,cAAAA,oBAAoB,GAAGhB,oBAAoB,CAACW,MAAM,CAACH,eAAR,CAA3C;AACD,aAxBY,CA0Bb;;;AA1Ba,6CA2BNV,OAAO,CAAC;AACbmB,cAAAA,MAAM,EAAE,MADK;AAEbC,cAAAA,GAAG,EAAEf,UAAU,CAACY,MAAM,CAACX,QAAR,CAFF;AAGbK,cAAAA,OAAO,EAAEM,MAAM,CAACN,OAHH;AAIbU,cAAAA,IAAI,EAAE,IAJO;AAKbC,cAAAA,IAAI,EAAE;AACJhB,gBAAAA,QAAQ,EAAEW,MAAM,CAACX,QADb;AAEJM,gBAAAA,WAAW,EAAEW,IAAI,CAACC,SAAL,CAAe,CAACP,MAAM,CAACL,WAAR,CAAf;AAFT;AALO,aAAD,CAAP,CASJa,IATI,CASC,UAAAC,MAAM,EAAI;AAChB,kBAAI,CAACA,MAAM,CAACC,OAAZ,EAAqB;AACnB,uBAAOC,OAAO,CAACC,MAAR,CAAeH,MAAf,CAAP;AACD;;AACD,qBAAOA,MAAM,CAACI,IAAd,CAJgB,CAII;AACrB,aAdM,EAcJC,KAdI,CAcE,UAAAC,CAAC,EAAI;AACZ,kBAAIA,CAAJ,EAAO;AACLlB,gBAAAA,SAAS,CAACkB,CAAC,CAACC,YAAF,IAAkBD,CAAC,CAACjB,OAArB,CAAT,CADK,CACmC;AACzC;;AACD,qBAAOa,OAAO,CAACC,MAAR,CAAeG,CAAf,CAAP;AACD,aAnBM,EAmBJE,OAnBI,CAmBI,YAAM;AACf,kBAAIhB,oBAAJ,EAA0B;AACxBA,gBAAAA,oBAAoB;AACrB;AACF,aAvBM,CA3BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import request from \"request-promise-native\";\nimport { Toast } from \"antd-mobile\";\nimport { showLoadingIndicator } from \"../component/common/LoadingIndicator\";\nimport joinUrl from \"./joinUrl\";\nimport env from \"../env\";\n\nfunction resolveUrl(endPoint) {\n  return joinUrl(env.SERVER_URL, endPoint);\n}\n\n\nconst DEFAULT_CONFIG = {\n  hideLoading: false,\n  loadingWithMask: true,\n  headers: {}\n};\n\nexport default async (endPoint, requestData = {}, config = DEFAULT_CONFIG) => {\n\n  // 合并config\n  config = {...DEFAULT_CONFIG, ...config};\n\n  const showError = (message) => {\n    if (!message) {\n      return;\n    }\n    Toast.offline(message, 1.2); // 用offline纯粹是因为Toast的\"哭脸\"好看，这就是弹一条消息出来的效果\n  };\n\n  const headers = {\n    ...config.headers,\n    // 可以在此处自定义 Headers，如token\n  };\n\n  const params = {\n    headers, endPoint, requestData\n  };\n\n  let hideLoadingIndicator;\n  if (!config.hideLoading) {\n    hideLoadingIndicator = showLoadingIndicator(config.loadingWithMask);\n  }\n\n  //TODO: 这部分逻辑可以自行修改，我这里假设了服务器返回 { success, errorMessage, data }\n  return request({\n    method: \"POST\",\n    uri: resolveUrl(params.endPoint),\n    headers: params.headers,\n    json: true,\n    form: {\n      endPoint: params.endPoint,\n      requestData: JSON.stringify([params.requestData]),\n    },\n  }).then(result => {\n    if (!result.success) {\n      return Promise.reject(result);\n    }\n    return result.data; // 没有错误，就返回data\n  }).catch(e => {\n    if (e) {\n      showError(e.errorMessage || e.message); // 显示错误信息\n    }\n    return Promise.reject(e)\n  }).finally(() => {\n    if (hideLoadingIndicator) {\n      hideLoadingIndicator();\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}